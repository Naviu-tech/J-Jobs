---
import { Code } from "astro/components";
// Define the features data
const features = [
  {
    title: "Security Systems",
    description:
      "Network security, access control, and video surveillance programming.",
  },
  {
    title: "PLC Controls",
    description: "Industrial automation and process control programming.",
  },
];
---
<section class="relative overflow-hidden bg-white">
  <div class="bg-purple-900 max-w-7xl mx-auto rounded-3xl">
    <div class="mx-auto max-w-7xl lg:px-16 md:px-12 px-8 xl:px-24 py-24">
      <div class="grid grid-cols-1 md:grid-cols-2 gap-12 lg:gap-24 items-start">
        <div>
          <span class="text-sm font-medium text-slate-300 tracking-wide uppercase"
            >Specialized Programming</span
          >
          <h2
            class="text-white font-semibold tracking-tight lg:text-5xl mt-6 text-3xl">
            Advanced Electrical Programming
          </h2>
          <p class="text-slate-300 mt-5 text-balance">
            Modern electrical systems require specialized programming knowledge.
            From security systems to industrial automation, electrical programmers
            combine traditional electrical skills with software expertise.
            <br />
            <br />
            Each specialty requires deep understanding of specific protocols,
            programming languages and industry standards.
          </p>
          <ul
            role="list"
            class="grid grid-cols-2 gap-4 list-none lg:gap-6 mt-12">
            {
              features.map((feature) => (
                <li>
                  <p class="font-semibold text-white text-base">
                    {feature.title}
                  </p>
                  <div class="mt-2 text-slate-400 text-sm">
                    {feature.description}
                  </div>
                </li>
              ))
            }
          </ul>
        </div>
        <div class="lg:mt-0 mt-12 h-full">
          <div
            x-data="{
        tabSelected: 1,
        tabId: $id('tabs'),
        tabButtonClicked(tabButton){
            this.tabSelected = tabButton.id.replace(this.tabId + '-', '');
            this.tabRepositionMarker(tabButton);
        },
        tabRepositionMarker(tabButton){
            this.$refs.tabMarker.style.width=tabButton.offsetWidth + 'px';
            this.$refs.tabMarker.style.height=tabButton.offsetHeight + 'px';
            this.$refs.tabMarker.style.left=tabButton.offsetLeft + 'px';
        },
        tabContentActive(tabContent){
            return this.tabSelected == tabContent.id.replace(this.tabId + '-content-', '');
        }
    }"
            x-init="tabRepositionMarker($refs.tabButtons.firstElementChild);"
            class="relative lg:rounded-3xl lg:p-10 text-white">
            <div
              x-ref="tabButtons"
              class="relative inline-grid items-center justify-center w-full h-10 grid-cols-2 p-1 bg-purple-900 border border-white/20 rounded-full select-none">
              <button
                :id="$id(tabId)"
                @click="tabButtonClicked($el);"
                type="button"
                class="relative z-20 inline-flex items-center justify-center w-full h-8 px-3 text-sm font-medium transition-all rounded-full cursor-pointer whitespace-nowrap"
                >Security</button
              >
              <button
                :id="$id(tabId)"
                @click="tabButtonClicked($el);"
                type="button"
                class="relative z-20 inline-flex items-center justify-center w-full h-8 px-3 text-sm font-medium transition-all rounded-md cursor-pointer whitespace-nowrap"
                >PLC</button
              >
              <div
                x-ref="tabMarker"
                class="absolute left-0 z-10 w-1/2 h-full duration-300 ease-out"
                x-cloak>
                <div class="w-full h-full bg-white/10 rounded-full shadow-sm">
                </div>
              </div>
            </div>
            <div class="relative w-full mt-2 content">
              <div
                :id="$id(tabId + '-content')"
                x-show="tabContentActive($el)"
                class="relative">
                <section
                  class="text-xs font-mono shadow-3xl mt-4 rounded-2xl overflowhidden h-full bg-[#14162a] p-4">
                  <Code
                    code={`// Security System Programming

const securitySystem = {
  languages: ['Python', 'C++', 'JavaScript'],
  protocols: ['TCP/IP', 'ONVIF', 'RTSP'],
  systems: {
    accessControl: {
      readers: ['RFID', 'Biometric', 'KeyCard'],
      software: ['Lenel', 'S2', 'Genetec']
    },
    videoSurveillance: {
      cameras: ['IP', 'PTZ', 'Thermal'],
      vms: ['Milestone', 'Genetec', 'Avigilon']
    },
    intrusion: ['Motion Detection', 'Glass Break', 'Door Contacts']
  },
  networking: ['VLANs', 'Port Security', 'Firewall Config']
};

// Required Certifications
const certifications = [
  'CompTIA Security+',
  'CCNA Security',
  'Axis Certification'
];`}
                    lang="js"
                    theme="css-variables"
                  />
                </section>
              </div>
              <div
                :id="$id(tabId + '-content')"
                x-show="tabContentActive($el)"
                class="relative"
                x-cloak>
                <section
                  class="text-xs font-mono mt-4 rounded-3xl shadow-2xl overflow-hidden h-full bg-[#14162a] p-4">
                  <Code
                    code={`// PLC Control Programming

const plcSystems = {
  languages: {
    iec61131: [
      'Ladder Logic',
      'Function Block',
      'Structured Text',
      'Sequential Function Charts'
    ]
  },
  platforms: {
    hardware: ['Allen Bradley', 'Siemens', 'Omron', 'Schneider'],
    software: ['Studio 5000', 'TIA Portal', 'CX-Programmer']
  },
  communications: {
    industrial: ['Ethernet/IP', 'Profinet', 'Modbus TCP'],
    fieldbus: ['DeviceNet', 'Profibus', 'CC-Link']
  },
  skills: [
    'HMI Development',
    'Process Control',
    'Motion Control',
    'SCADA Integration'
  ]
};

// Safety Standards
const standards = [
  'ISA/IEC 62443',
  'NFPA 79',
  'ISO 13849'
];`}
                    lang="js"
                    theme="css-variables"
                  />
                </section>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</section>
